#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};
struct Node* newNode(int item) {
       struct Node* temp = (struct Node*)malloc(sizeof(struct Node));
    if (temp == NULL) {
        printf("Memory allocation failed\n");
        exit(1);
    }
    temp->data = item;
    temp->left = temp->right = NULL;
    return temp;
}
void printTree(struct Node* root, int level) {
    if (root == NULL) return;
     printTree(root->right, level + 1);
    printf("%*s%d\n", level * 4, "", root->data);
    printTree(root->left, level + 1);
}
int main() {
    struct Node* root = newNode(10);
    root->left = newNode(5);
    root->right = newNode(15);
    root->left->left = newNode(3);
    root->left->right = newNode(7);
    root->right->left = newNode(12);
    root->right->right = newNode(18);
    printf("Binary Tree Structure:\n");
    printTree(root, 0);
    return 0;
}
