int* findMinHeightTrees(int n, int** edges, int edgesSize, int* edgesColSize, int* returnSize) {
    int* ans = malloc(sizeof(int) * n);
    *returnSize = 0;

    int graph[20000] = {0};
    int counts[20000] = {0};
    for(int i = 0; i < edgesSize; i++) {
        counts[edges[i][0]]++;
        counts[edges[i][1]]++;
        graph[edges[i][0]] ^= edges[i][1];
        graph[edges[i][1]] ^= edges[i][0];
    }

    int queue[20000] = {0};
    int idx = 0;
    for(int i = 0; i < n; i++) {
        if(counts[i] <= 1) {
            queue[idx++] = i;
        }
    }
    int new_idx = 0;
    while(new_idx < idx) {
        *returnSize = 0;

        int cur_idx = idx;
        for(int i = new_idx; i < cur_idx; i++) {
            int rm = queue[new_idx++];
            int other = graph[rm];
            counts[other]--;
            graph[other] ^= rm;
            ans[(*returnSize)++] = rm;

            if(counts[other] == 1) {
                queue[idx++] = other;
            }
        }
    }

    return ans;
}
